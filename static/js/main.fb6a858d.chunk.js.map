{"version":3,"sources":["Modules/Modal/Modal.js","Modules/Store/Key.js","Modules/Editor/Panels/Undo.js","Modules/Canvas/Pixel.js","Modules/Canvas/Row.js","Modules/Canvas/Canvas.js","Modules/Editor/Panels/Colors.js","Modules/Editor/Panels/Brush.js","Modules/Editor/Editor.js","Modules/Page Transition/Transition.js","App.js","reportWebVitals.js","index.js"],"names":["Modal","props","useState","textInput","setTextInput","handleClick","e","target","classList","contains","close","useEffect","window","addEventListener","cleanup","removeEventListener","Fragment","className","onChange","preventDefault","previous","value","placeholder","onClick","click","getKey","key","valueStr","sessionStorage","getItem","JSON","parse","err","console","log","UndoRedo","data","undo","i","length","toErase","document","getElementById","style","backgroundColor","Pixel","grid","dimension","zoom","pid","rid","id","onMouseOver","border","onMouseLeave","boxShadow","width","height","Row","pixels","push","Canvas","React","memo","canvasRef","useRef","rows","ref","Colors","disableAlpha","onChangeComplete","color","changeColor","hex","colors","Brush","currentColor","size","setLocationArray","setLastPoint","mouseDown","currentStroke","handleMouseClick","handleMouseMove","handleMouseUp","Math","floor","timeStamp","lastPoint","history","handleHistoryStore","a","storeData","location","right1","left1","top1","bottom1","rightm","leftm","topm","bottomm","rightt","rightb","leftt","leftb","webrtc","LioWebRTC","dataOnly","Editor","setDimension","setZoom","setCurrentColor","colorPalette","setColorPalette","gridLines","setGridLines","toolOpen","setToolOpen","brushSize","setBrushSize","modalOpen","openModal","dropDownOpen","setDropDownOpen","isOnline","setIsOnline","number","setNumber","message","setMessage","messagesRef","on","name","peer","type","clear","leaveRoom","handleZoom","deltaY","handleColor","convert","c","convertedColor","test","join","substring","prev","arr","indexOf","handleTool","classToAdd","idToFind","previousTool","querySelector","toggle","handleOpenClose","variable","setVar","add","remove","downloadImage","canvas","then","img","Image","src","body","appendChild","catch","handleSave","saveArray","k","toSave","stringify","JSONed","localStorage","setItem","handleLoad","colorArray","handleReset","runningTotal","toSvg","disabled","num","toRedo","shout","obj","storeKey","text","roomName","joinRoom","Transition","App","editor","openEditor","transition","openTransition","updateDimensionCheck","newNumber","setTimeout","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.fb6a858d.chunk.js","sourcesContent":["import { cleanup } from '@testing-library/react';\r\nimport React, { useEffect, useState }  from 'react'\r\nimport './Modal.scss';\r\n\r\nexport default function Modal(props) {\r\n  const [textInput, setTextInput] = useState('')\r\n\r\n  const handleClick = (e) => {\r\n    if (!e.target.classList.contains(\"modal-component\")) {\r\n        props.close()\r\n    }\r\n  }\r\n\r\n  const handleInput = (e) => {\r\n    e.preventDefault()\r\n    setTextInput((previous) => e.target.value)\r\n  }\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('mousedown', handleClick )\r\n\r\n    return cleanup(() => {\r\n      window.removeEventListener('mousedown', handleClick)\r\n    }\r\n  )}, [])\r\n\r\n  return (\r\n    <React.Fragment>\r\n      { props.window == \"MultiDraw\" ?\r\n          <div className=\"Modal modal-component\">\r\n            <h1 className=\"modal-component\">Join/Create MultiDraw Room</h1>\r\n            <input \r\n              onChange={handleInput}\r\n              placeholder=\"Room Name\"\r\n              value={textInput}\r\n              className=\"modal-component\"\r\n            />\r\n            <button className=\"modal-component\" onClick={() => props.click(textInput)}>Join</button>\r\n          </div>\r\n        :\r\n        <div className=\"Modal modal-component\">\r\n          <h1 className=\"modal-component\">Resize</h1>\r\n          <button>+</button>\r\n          <button>-</button>\r\n        </div>\r\n      }\r\n    </React.Fragment>\r\n  );\r\n}\r\n","\r\nexport function getKey(key) {\r\n    if (!key && key !== 0) {\r\n        return null;\r\n    }\r\n\r\n    try {\r\n        const valueStr = sessionStorage.getItem(key);\r\n        if (valueStr) {\r\n            return JSON.parse(valueStr)\r\n        } else {\r\n            return null;\r\n        }\r\n    } catch(err) {\r\n        console.log(err)\r\n        return null;\r\n    }\r\n}\r\n\r\nexport function storeKey(key, obj) {\r\n    if (!key && key !== 0) {\r\n        console.log('Error: Key is missing');\r\n    } \r\n\r\n    try {\r\n        sessionStorage.setItem(key, JSON.stringify(obj));\r\n    } catch(err) {\r\n        console.log(err)\r\n    }\r\n}\r\n\r\nexport function removeKey(key) {\r\n    try {\r\n        sessionStorage.removeItem(key)\r\n    } catch(err) {\r\n        console.log(err)\r\n    }\r\n}","export function UndoRedo(data, undo) {\r\n\r\n    for (let i = 0; i < data.length; i++) {\r\n        let toErase = document.getElementById(`[${data[i][0][0]}, ${data[i][0][1]}]`)\r\n        if (undo === 'undo') {\r\n            toErase.style.backgroundColor = data[i][1]\r\n        } else {\r\n            toErase.style.backgroundColor = data[i][2]            \r\n        }\r\n    }\r\n\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { findRenderedDOMComponentWithClass } from 'react-dom/test-utils'\r\nimport './Pixel.scss'\r\n\r\nexport default function Pixel(props) {\r\n    const { grid, backgroundColor, dimension, zoom, pid, rid } = props\r\n\r\n    const changeColorOnHover = (e) => {\r\n      e.target.style.border = \"1px solid black\"\r\n    }\r\n\r\n    const changeColorOnLeave = (e) => {\r\n      e.target.style.border = \"none\"\r\n    }\r\n\r\n    return (\r\n        <div\r\n        className=\"pixel\"\r\n        id={`[${rid}, ${pid}]`}\r\n        onMouseOver={changeColorOnHover}\r\n        onMouseLeave={changeColorOnLeave}\r\n        // onMouseEnter={changeColorOnHover}\r\n        // onMouseLeave={resetColor}\r\n        // onClick={applyColor}\r\n        style={{boxShadow: grid ? 'inset 0 0 1px black' : 'none', backgroundColor: backgroundColor, width: `${zoom/dimension}px`, height: `${zoom/dimension}px` }}\r\n      ></div>\r\n    )\r\n}","import Pixel from './Pixel'\r\nimport './Row.scss'\r\n\r\nexport default function Row(props) {\r\n    const { backgroundColor, dimension, zoom, rid, grid } = props;\r\n\r\n    let pixels = []\r\n  \r\n    for (let i = 0; i < dimension; i++) {\r\n      pixels.push(<Pixel key={i} rid={rid} pid={i} grid={grid} zoom={zoom} dimension={dimension} backgroundColor={backgroundColor} />)\r\n    }\r\n  \r\n    return (\r\n        <div className=\"row\">{pixels}</div>\r\n    )\r\n}","import React, { useRef } from 'react'\r\nimport Row from \"./Row\"\r\n\r\nconst Canvas = React.memo(props => {\r\n    const { dimension, backgroundColor, zoom, grid } = props\r\n\r\n    const canvasRef = useRef();\r\n\r\n    let rows = []\r\n    \r\n\r\n    for (let i = 0; i < dimension; i++) {\r\n        console.log('redrawing')\r\n        rows.push(<Row grid={grid} rid={i} key={i} zoom={zoom} dimension={dimension} backgroundColor={backgroundColor}/>)\r\n    }\r\n\r\n    return (\r\n        <div id=\"canvas\" ref={canvasRef}>\r\n            {rows}\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default Canvas\r\n","import { GithubPicker } from 'react-color'\r\n\r\nexport default function Colors(props) {\r\n\r\n    return (\r\n        <GithubPicker \r\n        disableAlpha={true}\r\n        onChangeComplete={(color)=> props.changeColor(color.hex, true)}\r\n        colors={[\r\n            \"FFFFFF\", \"#E8E8E8\", \"#E0E0E0\", \"#C0C0C0\", \"#888888\", \"#585858\", \"#202020\", \"#000000\", \r\n            '#B80000', '#DB3E00', '#FCCB00', '#008B02', '#006B76', '#1273DE', '#004DCF', '#5300EB', \r\n            '#EB9694', '#FAD0C3', '#FEF3BD', '#C1E1C5', '#BEDADC', '#C4DEF6', '#BED3F3', '#D4C4FB'\r\n        ]}\r\n        />\r\n    )\r\n}","import React, { useEffect, useState, useRef } from 'react'\r\n\r\n\r\nexport default function Brush(props) {\r\n    const { currentColor, size } = props\r\n\r\n    const [locationArray, setLocationArray] = useState([])\r\n    const [lastPoint, setLastPoint] = useState(false)\r\n    let mouseDown = false;\r\n    let currentStroke = [];\r\n\r\n    useEffect(() => {\r\n\r\n        console.log('attaching event listener to brush with color: ' + currentColor)\r\n        window.addEventListener('mousedown', handleMouseClick );\r\n        window.addEventListener('mousemove', handleMouseMove );\r\n        window.addEventListener('mouseleave', handleMouseUp );\r\n        window.addEventListener('mouseup', handleMouseUp );\r\n\r\n        return function cleanup() {\r\n            console.log('removing event listeners')\r\n            window.removeEventListener('mousedown', handleMouseClick );\r\n            window.removeEventListener('mousemove', handleMouseMove );\r\n            window.removeEventListener('mouseleave', handleMouseUp );\r\n            window.removeEventListener('mouseup', handleMouseUp );\r\n        }\r\n    }, [currentColor, size])\r\n\r\n    const handleMouseMove = (e) => {\r\n        \r\n        if (!mouseDown) { \r\n            return \r\n        }\r\n        \r\n        if (Math.floor(e.timeStamp) % 2 === 0) {\r\n            return \r\n        }\r\n\r\n        setLastPoint((lastPoint) => {\r\n        \r\n            if (e.target.id === lastPoint) {\r\n                return lastPoint\r\n            }\r\n\r\n            \r\n            handleMouseClick(e)\r\n            return e.target.id\r\n        })\r\n    }\r\n \r\n    const handleMouseUp = (e) => {\r\n\r\n        mouseDown = false\r\n        if (currentStroke.length > 0) {\r\n            props.history(currentStroke)\r\n            currentStroke = []\r\n            setLocationArray((previous) => [])\r\n        }\r\n\r\n    }\r\n\r\n    const handleHistoryStore = (data) => {\r\n        // first stroke ? \r\n        if (!currentStroke) {\r\n            currentStroke.push(data)\r\n            return\r\n        }  \r\n\r\n        // if current color of the block and the desired color to change it to are the same.\r\n        // I dont check this within the mousedown function because I dont want to do that check for all different sizes of the brush. Seems pretty heavy.\r\n        if (data[1] === data[2]) {\r\n            return \r\n        }\r\n\r\n        currentStroke.push(data)\r\n    }\r\n\r\n\r\n    const handleMouseClick = async (e) => {\r\n\r\n        e.preventDefault();\r\n\r\n        // make sure i am not changing something that isnt a pixel.\r\n        if (!e.target.classList.contains('pixel')) {\r\n            return\r\n        }\r\n\r\n        // set mousedown to active things like mousedown trigger event firing.\r\n        mouseDown = true;   \r\n        \r\n        \r\n        // handle the middle stroke of the brush. Since no matter what brush size this will be called\r\n        let storeData = [await JSON.parse(e.target.id), e.target.style.backgroundColor, currentColor]\r\n        e.target.style.backgroundColor = currentColor\r\n\r\n        handleHistoryStore(storeData)\r\n\r\n        let location = storeData[0]\r\n\r\n        if (size === 2) {\r\n            let right1 = document.getElementById(`[${location[0]}, ${location[1]+1}]`)\r\n            let left1 = document.getElementById(`[${location[0]}, ${location[1]-1}]`)\r\n            let top1 = document.getElementById(`[${location[0]+1}, ${location[1]}]`)\r\n            let bottom1 = document.getElementById(`[${location[0]-1}, ${location[1]}]`)\r\n            if (right1) { \r\n                handleHistoryStore([[location[0], location[1]+1], right1.style.backgroundColor, currentColor])\r\n                right1.style.backgroundColor = currentColor\r\n             }\r\n            if (left1) { \r\n                handleHistoryStore([[location[0], location[1]-1], left1.style.backgroundColor, currentColor])\r\n                left1.style.backgroundColor = currentColor\r\n             }\r\n            if (top1) { \r\n                handleHistoryStore([[location[0]+1, location[1]], top1.style.backgroundColor, currentColor])\r\n                top1.style.backgroundColor = currentColor\r\n             }\r\n            if (bottom1) { \r\n                handleHistoryStore([[location[0]-1, location[1]], bottom1.style.backgroundColor, currentColor])\r\n                bottom1.style.backgroundColor = currentColor\r\n             }\r\n        } else if (size === 3) {\r\n            let rightm = document.getElementById(`[${location[0]}, ${location[1]+1}]`)\r\n            let leftm = document.getElementById(`[${location[0]}, ${location[1]-1}]`)\r\n            let topm = document.getElementById(`[${location[0]+1}, ${location[1]}]`)\r\n            let bottomm = document.getElementById(`[${location[0]-1}, ${location[1]}]`)\r\n            let rightt = document.getElementById(`[${location[0]+1}, ${location[1]+1}]`)\r\n            let rightb = document.getElementById(`[${location[0]+1}, ${location[1]-1}]`)\r\n            let leftt = document.getElementById(`[${location[0]-1}, ${location[1]+1}]`)\r\n            let leftb = document.getElementById(`[${location[0]-1}, ${location[1]-1}]`)\r\n            if (rightm) { \r\n                handleHistoryStore([[location[0], location[1]+1], rightm.style.backgroundColor, currentColor])\r\n                rightm.style.backgroundColor = currentColor\r\n            }\r\n            if (leftm) { \r\n                handleHistoryStore([[location[0], location[1]-1], leftm.style.backgroundColor, currentColor])\r\n                leftm.style.backgroundColor = currentColor\r\n            }\r\n            if (topm) { \r\n                handleHistoryStore([[location[0]+1, location[1]], topm.style.backgroundColor, currentColor])\r\n                topm.style.backgroundColor = currentColor \r\n            }\r\n            if (bottomm) { \r\n                handleHistoryStore([[location[0]-1, location[1]], bottomm.style.backgroundColor, currentColor])\r\n                bottomm.style.backgroundColor = currentColor\r\n            }\r\n            if (rightt) { \r\n                handleHistoryStore([[location[0]+1, location[1]+1], rightt.style.backgroundColor, currentColor])\r\n                rightt.style.backgroundColor = currentColor \r\n            }\r\n            if (rightb) { \r\n                handleHistoryStore([[location[0]+1, location[1]-1], rightb.style.backgroundColor, currentColor])\r\n                rightb.style.backgroundColor = currentColor \r\n            }\r\n            if (leftt) { \r\n                handleHistoryStore([[location[0]-1, location[1]+1], leftt.style.backgroundColor, currentColor])\r\n                leftt.style.backgroundColor = currentColor \r\n            }\r\n            if (leftb) { \r\n                handleHistoryStore([[location[0]-1, location[1]-1], leftb.style.backgroundColor, currentColor])\r\n                leftb.style.backgroundColor = currentColor \r\n            }\r\n        }\r\n    }\r\n\r\n    return null\r\n}","import React, { useState, useEffect, useRef, useCallback } from 'react';\r\nimport LioWebRTC from 'liowebrtc'\r\nimport { toPng, toSvg } from 'html-to-image';\r\nimport { BsBrush, BsFillBucketFill } from 'react-icons/bs';\r\nimport './Editor.scss';\r\n\r\nimport { storeKey, getKey, removeKey } from '../Store/Key';\r\nimport { UndoRedo } from './Panels/Undo';\r\nimport Canvas from '../Canvas/Canvas';\r\nimport Colors from './Panels/Colors';\r\nimport Brush from './Panels/Brush';\r\nimport Modal from '../Modal/Modal'\r\n\r\n\r\nconst webrtc = new LioWebRTC({\r\n    dataOnly: true\r\n});\r\n\r\n\r\n// This is the main function all my panels and drawing components pull from. Think of this as the App() of this application.\r\nexport default function Editor(props) {\r\n\r\n    const [dimension, setDimension] = useState(props.dimension)\r\n    const [zoom, setZoom] = useState(500)\r\n    const [currentColor, setCurrentColor] = useState('rgb(255, 0, 0)')\r\n    const [colorPalette, setColorPalette] = useState(['rgb(220, 0, 0)', 'rgb(0, 220, 0)', 'rgb(0, 0, 220)'])\r\n    const [gridLines, setGridLines] = useState(false)\r\n    const [backgroundColor, setBackgroundColor] = useState('rgb(255,255,255)')\r\n    \r\n    const [toolOpen, setToolOpen] = useState('brush')\r\n    const [brushSize, setBrushSize] = useState(1)\r\n    \r\n    const [modalOpen, openModal] = useState(false)\r\n    const [dropDownOpen, setDropDownOpen] = useState(false)\r\n    \r\n    const [isOnline, setIsOnline] = useState(false)\r\n    \r\n    // number for undo button\r\n    const [number, setNumber] = useState(0)\r\n    \r\n    const [message, setMessage] = useState(\"Select a brush to get started!\")\r\n    const messagesRef = useRef()\r\n\r\n    useEffect(() => {\r\n        webrtc.on('joinedRoom', (name) => {\r\n            console.log('succesfully joined room ', name)\r\n        })\r\n        \r\n        webrtc.on('removedPeer', (peer) => {\r\n            console.log(peer.id, ' left the room')\r\n            setMessage(`User ${peer.id} has left the room`)\r\n        })\r\n\r\n        webrtc.on('leftRoom', (name) => {\r\n            console.log('left')\r\n        })\r\n        \r\n        webrtc.on('createdPeer', (peer) => {\r\n            console.log(peer.id, ' joined the room!')\r\n            setMessage(`User ${peer.id} has joined the room`)\r\n        })\r\n        \r\n        webrtc.on('receivedPeerData', (type, data, peer) => {\r\n            console.log('data received....')\r\n            if (peer.id) {\r\n                console.log(`data received from: ${peer.id}... contains: ${data}`)\r\n                // draw peers data on the local clients screen using the Redo function from the undo and redo buttons\r\n                UndoRedo(data, 'redo')\r\n            }\r\n        })\r\n\r\n        // making sure all varaibles start fresh if user refreshes. may change this implementation at a later date.\r\n        sessionStorage.clear();\r\n        webrtc.leaveRoom()\r\n\r\n        document.addEventListener('wheel', handleZoom);\r\n\r\n        return function cleanup() {\r\n            document.removeEventListener('wheel', handleZoom)\r\n        }\r\n    }, [])\r\n    \r\n    // called from wheel listener to \"zoom\" in and out pixels of canvas\r\n    const handleZoom = (e) => {\r\n        if (e.deltaY > 0) {\r\n            setZoom((zoom) => zoom > 50 ? zoom - 50 : zoom);\r\n        } else if (e.deltaY < 0) {\r\n            setZoom((zoom) => zoom < 800 ? zoom + 50 : zoom);\r\n        }\r\n    }\r\n\r\n    const handleNewtworkJoin = (roomName) => {\r\n        if (!isOnline) {\r\n            webrtc.joinRoom(roomName)\r\n            setIsOnline(true)\r\n            setMessage(`You have succesfully joined room ${roomName}...`)\r\n        }\r\n    }\r\n\r\n    const handleNetworkLeave = () => {\r\n        if (isOnline) {\r\n            webrtc.leaveRoom()\r\n            setIsOnline(false)\r\n            setMessage(`You have disconnected from MultiDraw room...`)\r\n        }\r\n    }\r\n\r\n    // called from Colors.js through props\r\n    const handleColor = (color, convert) => {\r\n\r\n        // from user: kennebec on StackOverflow\r\n        function hexToRgb(c){\r\n            if(/^#([a-f0-9]{3}){1,2}$/.test(c)){\r\n                if(c.length== 4){\r\n                    c= '#'+[c[1], c[1], c[2], c[2], c[3], c[3]].join('');\r\n                }\r\n                c= '0x'+c.substring(1);\r\n                return 'rgb('+[(c>>16)&255, (c>>8)&255, c&255].join(', ')+')';\r\n            }\r\n            return '';\r\n        }\r\n\r\n        setMessage(`Changed Brush color`)\r\n        let convertedColor = convert ? hexToRgb(color) : color\r\n\r\n        \r\n        setCurrentColor((prev) => convertedColor);\r\n        setColorPalette((arr) => {\r\n            let newArr = []\r\n            let indexOf = arr.indexOf(convertedColor)\r\n\r\n            //if the same color comes through twice, dont make it appear twice in the palette\r\n            if (convertedColor === arr[0]) {\r\n                return arr\r\n            }\r\n\r\n            if (indexOf === -1) {\r\n                return [convertedColor, arr[0], arr[1]]\r\n            }\r\n            indexOf === 2 ? newArr = [convertedColor, arr[0], arr[1]] : newArr = [convertedColor, arr[0], arr[2]]\r\n            return newArr\r\n        })\r\n    }\r\n\r\n    const handleTool = (e, classToAdd, idToFind) => {\r\n        setToolOpen((previousTool) => {\r\n            if (!previousTool) {\r\n                console.log('no tool')\r\n                document.querySelector(`#${idToFind}`).classList.toggle(classToAdd)\r\n                return idToFind\r\n            }\r\n            if (previousTool === idToFind) {\r\n                document.querySelector(`#${idToFind}`).classList.toggle(classToAdd)\r\n                return false\r\n            }\r\n            document.querySelector(`#${previousTool}`).classList.toggle(classToAdd)\r\n            document.querySelector(`#${idToFind}`).classList.toggle(classToAdd)\r\n            return idToFind\r\n        })\r\n    }\r\n\r\n    // this code layout is super odd but it works perfectly? \r\n    // I think it is because the react state hooks dont update within the same function when using them this way so manipulating the setDropDown data works fine even when the checks later in the method dont work as the code maybe looks\r\n    const handleOpenClose = (e, className, variable, setVar) => {\r\n        if (variable) {\r\n            setVar(false)\r\n            let divToClose = document.querySelector(`.${variable}`)\r\n            divToClose.classList.add(className)\r\n            if (variable === e.target.id) {\r\n                return\r\n            }\r\n        }\r\n        setVar(e.target.id)\r\n        let divToOpen = document.querySelector(`.${e.target.id}`)\r\n        divToOpen.classList.remove(className)\r\n    }\r\n    \r\n    const downloadImage = async (e) => {\r\n       let canvas = await document.querySelector('#canvas');\r\n\r\n       e(canvas)\r\n        .then(data => {\r\n            let img = new Image();\r\n            img.src = data\r\n            document.body.appendChild(img)\r\n        })\r\n        .catch(err => {\r\n            console.log('gone wrong: ', err)\r\n        })\r\n    }\r\n\r\n\r\n    // Resize button\r\n    const resize = () => {\r\n        setDimension(dimension * 2)\r\n    }\r\n\r\n\r\n    // Store brush strokes after mouse click is lifted for Undo button history aswell as to send over to Multidraw peers\r\n    const storeHistory = (data) => {\r\n        webrtc.shout(\"paint-data\", data)\r\n        setNumber((previous) => {\r\n            storeKey(previous, data)\r\n            return previous + 1\r\n        })\r\n    }\r\n\r\n\r\n    // Grab Undo history from Session and remove strokes back to previous values\r\n    const handleUndo = () => {\r\n        if (number > 0) {\r\n            setMessage('Undo...')\r\n            setNumber((num) => {\r\n                let toRemove = getKey(num-1)\r\n                UndoRedo(toRemove, 'undo')\r\n                return num - 1\r\n            })\r\n        }\r\n    }\r\n\r\n    const handleRedo = () => {\r\n        setMessage('Redo...')\r\n        setNumber((num) => {\r\n            let toRedo = getKey(num)\r\n            if (toRedo) {\r\n                UndoRedo(toRedo, 'redo')\r\n                return num + 1\r\n            }\r\n            return num\r\n        })\r\n    }\r\n\r\n    const handleSave = async (name) => {\r\n        let saveArray = []\r\n        for (let i = 0; i < dimension; i++) {\r\n            for (let k = 0; k < dimension; k++) {\r\n                let toSave = document.getElementById(`[${i}, ${k}]`).style['background-color']\r\n                saveArray.push(toSave)\r\n            }\r\n        }\r\n        let JSONed = await JSON.stringify(saveArray)\r\n        localStorage.setItem('save', JSONed)\r\n        setMessage('Canvas Saved...')\r\n    }\r\n\r\n    const handleLoad = async (name) => {\r\n        let colorArray = await JSON.parse(localStorage.getItem('save'))\r\n\r\n        if (!colorArray) {\r\n            return\r\n        }\r\n\r\n        if (dimension * dimension !== colorArray.length) {\r\n            setMessage(`Your save file is not the same dimension as your current canvas (${dimension} x ${dimension}) `)\r\n            return\r\n        }\r\n\r\n        handleReset()\r\n        let runningTotal = 0\r\n        for (let i = 0; i < dimension; i++) {\r\n            for (let k = 0; k < dimension; k++) {\r\n                let toChange = document.getElementById(`[${i}, ${k}]`)\r\n                toChange.style['background-color'] = colorArray[runningTotal]\r\n                runningTotal += 1\r\n            }\r\n        }\r\n        setMessage('Canvas Loaded...')\r\n    }\r\n\r\n    // clear canvas and history\r\n    const handleReset = () => {\r\n        sessionStorage.clear();\r\n        setNumber(0)\r\n        for (let i = 0; i < dimension; i++) {\r\n            for (let k = 0; k < dimension; k++) {\r\n                let toChange = document.getElementById(`[${i}, ${k}]`)\r\n                toChange.style['background-color'] = \"rgb(255,255,255)\"\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n      <div className=\"editor\">\r\n\r\n          <nav className=\"top-nav\">\r\n              <div className=\"dd-wrapper\">\r\n                <button id=\"File\" onClick={(e) => handleOpenClose(e, 'hidden', dropDownOpen, setDropDownOpen)}>File</button>\r\n                <div className=\"drop-down hidden File\">\r\n                    <button onClick={()=> downloadImage(toSvg)}>Download</button>\r\n                    <button onClick={()=> handleSave('save')}>Save</button>\r\n                    <button onClick={()=> handleLoad('save')}>Load</button>\r\n                </div>\r\n              </div>\r\n              <div className=\"dd-wrapper\">\r\n                <button id=\"Edit\" onClick={(e) => handleOpenClose(e, 'hidden', dropDownOpen, setDropDownOpen)}>Edit</button>\r\n                <div className=\"drop-down hidden Edit\">\r\n                    <button style={{color: isOnline ? 'grey' : 'white'}} disabled={isOnline ? true : false} onClick={() => handleUndo()}>Undo</button>\r\n                    <button style={{color: isOnline ? 'grey' : 'white'}} disabled={isOnline ? true : false} onClick={() => handleRedo()}>Redo</button>\r\n                    <button style={{color: isOnline ? 'grey' : 'white'}} disabled={isOnline ? true : false} onClick={() => resize()}>Resize</button>\r\n                    <button onClick={() => handleReset()}>Reset</button>\r\n                    <button onClick={() => setGridLines(!gridLines)}>Gridlines</button>\r\n                </div>\r\n              </div>\r\n              <div className=\"dd-wrapper\">\r\n                <button id=\"MultiDraw\" onClick={(e) => handleOpenClose(e, 'hidden', dropDownOpen, setDropDownOpen)}>MultiDraw</button>\r\n                <div className=\"drop-down hidden MultiDraw\">\r\n                    <button style={{color: isOnline ? 'grey' : 'white'}} disabled={isOnline ? true : false} onClick={() => openModal(\"MultiDraw\")}>Join</button>\r\n                    <button onClick={() => handleNetworkLeave()}>Leave</button>\r\n                </div>\r\n              </div>\r\n              <p ref={messagesRef} className=\"message-right\">{message}</p>\r\n          </nav>\r\n\r\n          <nav className=\"left-nav\">\r\n\r\n                <div className=\"current-color\">\r\n                    <div className=\"color color-main\" style={{backgroundColor: colorPalette[0]}}></div>\r\n                    <div className=\"color\" onClick={() => handleColor(colorPalette[1], false)} style={{backgroundColor: colorPalette[1]}}></div>\r\n                    <div className=\"color\" onClick={() => handleColor(colorPalette[2], false)} style={{backgroundColor: colorPalette[2]}}></div>\r\n                </div>\r\n\r\n                <Colors changeColor={handleColor}/>\r\n\r\n                <div className=\"button-wrapper\">\r\n                    <button id=\"brush\" className=\"left-button\" onClick={(e)=> {\r\n                        handleTool(e, 'left-inactive', 'brush')\r\n                    }}><BsBrush /></button>\r\n                    <button onClick={()=> brushSize < 3 ? setBrushSize(brushSize + 1) : null}>+</button>\r\n                    <button onClick={()=> brushSize > 1 ? setBrushSize(brushSize - 1) : null}>-</button>\r\n                </div>\r\n                { toolOpen === 'brush' && <Brush history={storeHistory} size={brushSize} currentColor={currentColor} /> }\r\n\r\n                <div className=\"button-wrapper\">\r\n                    <button id=\"bucket\" className=\"left-button left-inactive\" onClick={(e)=> {\r\n                        handleTool(e, 'left-inactive', 'bucket')\r\n                    }}><BsFillBucketFill />WIP</button>\r\n                </div>\r\n                \r\n          </nav>\r\n\r\n\r\n          <div className=\"canvas-container\">\r\n            <Canvas grid={gridLines} backgroundColor={backgroundColor} zoom={zoom} dimension={dimension}/>\r\n          </div>\r\n\r\n          { modalOpen ? <Modal\r\n            window={modalOpen}\r\n            close={() => openModal(!modalOpen)} \r\n            click={(text) => {\r\n              handleNewtworkJoin(text)\r\n              openModal(!modalOpen)\r\n            }} /> : null }\r\n      </div>\r\n    );\r\n}\r\n","import './Transition.scss'\r\n\r\nexport default function Transition(props) {\r\n    return (\r\n        <div className=\"page-cover\"></div>\r\n    )\r\n}","import React, { useState, useContext } from 'react';\nimport './App.scss';\n\nimport Modal from './Modules/Modal/Modal'\nimport Editor from './Modules/Editor/Editor'\nimport Transition from './Modules/Page Transition/Transition'\n\nfunction App() {\n  const [editor, openEditor] = useState(false)\n  const [transition, openTransition] = useState(false)\n  const [dimension, setDimension] = useState(16)\n\n  const updateDimensionCheck = (newNumber) => {\n    // current limits for pixel art is between 16 and 64. any higher than 64 and my current zoom function runs horrificly due to a re render every run\n    if (newNumber >= 16 && newNumber <= 64) {\n      setDimension(newNumber)\n    }\n  }\n\n  const startEditor = () => {\n    openTransition(true)\n    setTimeout(() => {\n      openEditor(true)\n    }, 500)\n    setTimeout(() => {\n      openTransition(false)\n    }, 1500)\n  }\n\n  return (\n    <div className=\"App\">\n      { editor ? <Editor dimension={dimension}/> : \n        <div className=\"homepage-container\">\n          <div className=\"homepage-header-div\">\n            <h1>React Pixel</h1>\n            <p>An application for creating pixel art on the web!</p>\n          </div>\n          <div className=\"dimension-div\">\n            <h4>Canvas Size: <span>{dimension}</span> X <span>{dimension}</span></h4>\n            <button onClick={() => updateDimensionCheck(dimension / 2)}>-</button>\n            <button onClick={() => updateDimensionCheck(dimension * 2)}>+</button>\n          </div>\n          <button className=\"start-button\" onClick={() => startEditor()}>START NOW</button>\n        </div>\n    }\n    { transition ? <Transition /> : null }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}